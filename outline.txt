Step 1 â†’ Database Setup
ðŸ“„ File: sql/schema.sql
Create your MySQL database climaguard.
Write SQL to make:
weather_raw (raw API data)
weather_daily (aggregated daily features)
âœ… Run schema once in MySQL Workbench to set up tables.

Step 2 â†’ Fetch & Store Raw Data
ðŸ“„ File: src/ingest.py
Learn to call WeatherAPI & Air Pollution API using requests.
Parse JSON â†’ extract temp, min_temp, wind_speed, AQI.
Insert into weather_raw.
Test by calling for 1 city (e.g., Toronto) and inserting a row.

âœ… You should see rows appearing in weather_raw.
Step 3 â†’ Feature Engineering
ðŸ“„ File: src/features.py
Load weather_raw into pandas.
Compute: avg/min/max temp, avg wind speed, avg AQI.
Compute wind chill index.
Insert daily summary into weather_daily.
âœ… You should see summarized rows in weather_daily.

Step 4 â†’ Train ML Model
ðŸ“„ File: src/train.py
Query weather_daily.
Define risk_level column (Low/Medium/High).
Train Logistic Regression or RandomForest.
Save model as models/risk_model.joblib.
âœ… You should have a trained model file in /models/.

Step 5 â†’ Explainability (Optional, Good for CV)
ðŸ“„ File: src/explain.py
Load risk_model.joblib.
Run SHAP explainer.
Plot feature importance â†’ save as .png.
âœ… Youâ€™ll have an image showing which factors matter most.

Step 6 â†’ Backend API
ðŸ“„ File: src/service.py
Create FastAPI app.
/predict?city=Toronto: load latest features â†’ return risk level.
/health: return OK.
Run with:
uvicorn src.service:app --reload
âœ… You can visit http://127.0.0.1:8000/predict?city=Toronto and see JSON.

Step 7 â†’ Testing
ðŸ“„ File: tests/test_service.py
Use pytest and TestClient to test endpoints.
Test /predict returns risk in JSON.
Test /health returns 200 OK.
âœ… Tests pass â†’ backend is stable.

Step 8 â†’ Frontend Dashboard
ðŸ“„ File: web/index.html
Basic HTML page.
JavaScript fetch() â†’ call /predict.
Display risk level with color-coded badge.
Optional: use Chart.js to plot AQI & temperature trends.
âœ… Dashboard shows live prediction for your chosen city.

Step 9 â†’ Final Touches
ðŸ“„ File: .env.example
Add example API key + DB creds.
ðŸ“„ File: README.md
Add project description, structure, install steps, screenshots.